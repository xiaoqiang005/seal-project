name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        cd backend1
        pip install -r requirements/development.txt
        
    - name: Run backend tests
      run: |
        cd backend1
        pytest
      env:
        MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install Node.js dependencies
      run: |
        cd frontend
        npm install
        
    - name: Run frontend tests
      run: |
        cd frontend
        npm run test
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Upload backend coverage
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./backend1/htmlcov/
        flags: backend
        name: codecov-backend
        fail_ci_if_error: true
        
    - name: Upload frontend coverage
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./frontend/coverage/
        flags: frontend
        name: codecov-frontend
        fail_ci_if_error: true 